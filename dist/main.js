/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar _require = __webpack_require__(/*! chalk */ \"./node_modules/chalk/index.js\"),\n    whiteGreenBold = _require.whiteGreenBold,\n    green = _require.green;\n\nvar figlet = __webpack_require__(/*! figlet */ \"./node_modules/figlet/lib/figlet.js\");\n\nvar _require2 = __webpack_require__(/*! ./src/utils/filter.js */ \"./src/utils/filter.js\"),\n    filter = _require2.filter;\n\nvar _require3 = __webpack_require__(/*! ./src/requests.js */ \"./src/requests.js\"),\n    requestJoke = _require3.requestJoke,\n    requestCategories = _require3.requestCategories,\n    requestSpecificCategorie = _require3.requestSpecificCategorie;\n\nvar command = process.argv[2];\n\nmodule.exports = function () {\n  console.log(green(figlet.textSync('chuck jokes\\n', { horizontalLayout: 'full' })));\n\n  function commands(args) {\n\n    console.log(args);\n\n    var categories = ['explicit', 'dev', 'movie', 'food', 'celebrity', 'science', 'sport', 'political', 'religion', 'animal', 'history', 'music', 'travel', 'career', 'money', 'fashion'];\n\n    var getCategory = function getCategory(cmd) {\n      return requestSpecificCategorie(filter(categories)(function (category) {\n        return category === cmd;\n      }).join(''));\n    };\n\n    var opts = {\n      joke: requestJoke,\n      categories: requestCategories\n    };\n\n    return (opts[arg] || getCategory)(arg);\n  }\n\n  commands(command);\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./node_modules/chalk/index.js":
/*!*************************************!*\
  !*** ./node_modules/chalk/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar escapeStringRegexp = __webpack_require__(/*! escape-string-regexp */ \"./node_modules/escape-string-regexp/index.js\");\nvar ansiStyles = __webpack_require__(/*! ansi-styles */ \"./node_modules/chalk/node_modules/ansi-styles/index.js\");\nvar stdoutColor = __webpack_require__(/*! supports-color */ \"./node_modules/chalk/node_modules/supports-color/browser.js\").stdout;\n\nvar template = __webpack_require__(/*! ./templates.js */ \"./node_modules/chalk/templates.js\");\n\nvar isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` â†’ `ansiStyles.color[name]` mapping\nvar levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nvar skipModels = new Set(['gray']);\n\nvar styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tvar scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tvar chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tvar args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\x1B[94m';\n}\n\nvar _loop = function _loop(key) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget: function get() {\n\t\t\tvar codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n};\n\nvar _iteratorNormalCompletion = true;\nvar _didIteratorError = false;\nvar _iteratorError = undefined;\n\ntry {\n\tfor (var _iterator = Object.keys(ansiStyles)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\tvar key = _step.value;\n\n\t\t_loop(key);\n\t}\n} catch (err) {\n\t_didIteratorError = true;\n\t_iteratorError = err;\n} finally {\n\ttry {\n\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t_iterator.return();\n\t\t}\n\t} finally {\n\t\tif (_didIteratorError) {\n\t\t\tthrow _iteratorError;\n\t\t}\n\t}\n}\n\nstyles.visible = {\n\tget: function get() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\n\nvar _loop2 = function _loop2(model) {\n\tif (skipModels.has(model)) {\n\t\treturn 'continue';\n\t}\n\n\tstyles[model] = {\n\t\tget: function get() {\n\t\t\tvar level = this.level;\n\t\t\treturn function () {\n\t\t\t\tvar open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tvar codes = {\n\t\t\t\t\topen: open,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n};\n\nvar _iteratorNormalCompletion2 = true;\nvar _didIteratorError2 = false;\nvar _iteratorError2 = undefined;\n\ntry {\n\tfor (var _iterator2 = Object.keys(ansiStyles.color.ansi)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\tvar model = _step2.value;\n\n\t\tvar _ret2 = _loop2(model);\n\n\t\tif (_ret2 === 'continue') continue;\n\t}\n} catch (err) {\n\t_didIteratorError2 = true;\n\t_iteratorError2 = err;\n} finally {\n\ttry {\n\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t_iterator2.return();\n\t\t}\n\t} finally {\n\t\tif (_didIteratorError2) {\n\t\t\tthrow _iteratorError2;\n\t\t}\n\t}\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\n\nvar _loop3 = function _loop3(model) {\n\tif (skipModels.has(model)) {\n\t\treturn 'continue';\n\t}\n\n\tvar bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget: function get() {\n\t\t\tvar level = this.level;\n\t\t\treturn function () {\n\t\t\t\tvar open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tvar codes = {\n\t\t\t\t\topen: open,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n};\n\nvar _iteratorNormalCompletion3 = true;\nvar _didIteratorError3 = false;\nvar _iteratorError3 = undefined;\n\ntry {\n\tfor (var _iterator3 = Object.keys(ansiStyles.bgColor.ansi)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\tvar model = _step3.value;\n\n\t\tvar _ret3 = _loop3(model);\n\n\t\tif (_ret3 === 'continue') continue;\n\t}\n} catch (err) {\n\t_didIteratorError3 = true;\n\t_iteratorError3 = err;\n} finally {\n\ttry {\n\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t_iterator3.return();\n\t\t}\n\t} finally {\n\t\tif (_didIteratorError3) {\n\t\t\tthrow _iteratorError3;\n\t\t}\n\t}\n}\n\nvar proto = Object.defineProperties(function () {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tvar builder = function builder() {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tvar self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset: function set(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset: function set(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tvar args = arguments;\n\tvar argsLen = args.length;\n\tvar str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (var a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tvar originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tvar _iteratorNormalCompletion4 = true;\n\tvar _didIteratorError4 = false;\n\tvar _iteratorError4 = undefined;\n\n\ttry {\n\t\tfor (var _iterator4 = this._styles.slice().reverse()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\tvar code = _step4.value;\n\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t\t// Close the styling before a linebreak and reopen\n\t\t\t// after next line to fix a bleed issue on macOS\n\t\t\t// https://github.com/chalk/chalk/pull/92\n\t\t\tstr = str.replace(/\\r?\\n/g, code.close + '$&' + code.open);\n\t\t}\n\n\t\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\t} catch (err) {\n\t\t_didIteratorError4 = true;\n\t\t_iteratorError4 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t_iterator4.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError4) {\n\t\t\t\tthrow _iteratorError4;\n\t\t\t}\n\t\t}\n\t}\n\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tvar args = [].slice.call(arguments, 2);\n\tvar parts = [strings.raw[0]];\n\n\tfor (var i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/chalk/index.js?");

/***/ }),

/***/ "./node_modules/chalk/node_modules/ansi-styles/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/chalk/node_modules/ansi-styles/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar colorConvert = __webpack_require__(/*! color-convert */ \"./node_modules/color-convert/index.js\");\n\nvar wrapAnsi16 = function wrapAnsi16(fn, offset) {\n\treturn function () {\n\t\tvar code = fn.apply(colorConvert, arguments);\n\t\treturn '\\x1B[' + (code + offset) + 'm';\n\t};\n};\n\nvar wrapAnsi256 = function wrapAnsi256(fn, offset) {\n\treturn function () {\n\t\tvar code = fn.apply(colorConvert, arguments);\n\t\treturn '\\x1B[' + (38 + offset) + ';5;' + code + 'm';\n\t};\n};\n\nvar wrapAnsi16m = function wrapAnsi16m(fn, offset) {\n\treturn function () {\n\t\tvar rgb = fn.apply(colorConvert, arguments);\n\t\treturn '\\x1B[' + (38 + offset) + ';2;' + rgb[0] + ';' + rgb[1] + ';' + rgb[2] + 'm';\n\t};\n};\n\nfunction assembleStyles() {\n\tvar codes = new Map();\n\tvar styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = Object.keys(styles)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar groupName = _step.value;\n\n\t\t\tvar group = styles[groupName];\n\n\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\tvar _didIteratorError3 = false;\n\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator3 = Object.keys(group)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\tvar styleName = _step3.value;\n\n\t\t\t\t\tvar style = group[styleName];\n\n\t\t\t\t\tstyles[styleName] = {\n\t\t\t\t\t\topen: '\\x1B[' + style[0] + 'm',\n\t\t\t\t\t\tclose: '\\x1B[' + style[1] + 'm'\n\t\t\t\t\t};\n\n\t\t\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\t\t\tcodes.set(style[0], style[1]);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t_iteratorError3 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tObject.defineProperty(styles, groupName, {\n\t\t\t\tvalue: group,\n\t\t\t\tenumerable: false\n\t\t\t});\n\n\t\t\tObject.defineProperty(styles, 'codes', {\n\t\t\t\tvalue: codes,\n\t\t\t\tenumerable: false\n\t\t\t});\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar ansi2ansi = function ansi2ansi(n) {\n\t\treturn n;\n\t};\n\tvar rgb2rgb = function rgb2rgb(r, g, b) {\n\t\treturn [r, g, b];\n\t};\n\n\tstyles.color.close = '\\x1B[39m';\n\tstyles.bgColor.close = '\\x1B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tvar _iteratorNormalCompletion2 = true;\n\tvar _didIteratorError2 = false;\n\tvar _iteratorError2 = undefined;\n\n\ttry {\n\t\tfor (var _iterator2 = Object.keys(colorConvert)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\tvar key = _step2.value;\n\n\t\t\tif (_typeof(colorConvert[key]) !== 'object') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar suite = colorConvert[key];\n\n\t\t\tif (key === 'ansi16') {\n\t\t\t\tkey = 'ansi';\n\t\t\t}\n\n\t\t\tif ('ansi16' in suite) {\n\t\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t\t}\n\n\t\t\tif ('ansi256' in suite) {\n\t\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t\t}\n\n\t\t\tif ('rgb' in suite) {\n\t\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError2 = true;\n\t\t_iteratorError2 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t_iterator2.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError2) {\n\t\t\t\tthrow _iteratorError2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/chalk/node_modules/ansi-styles/index.js?");

/***/ }),

/***/ "./node_modules/chalk/node_modules/supports-color/browser.js":
/*!*******************************************************************!*\
  !*** ./node_modules/chalk/node_modules/supports-color/browser.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n\n//# sourceURL=webpack:///./node_modules/chalk/node_modules/supports-color/browser.js?");

/***/ }),

/***/ "./node_modules/chalk/templates.js":
/*!*****************************************!*\
  !*** ./node_modules/chalk/templates.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nvar STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nvar STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nvar ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nvar ESCAPES = new Map([['n', '\\n'], ['r', '\\r'], ['t', '\\t'], ['b', '\\b'], ['f', '\\f'], ['v', '\\v'], ['0', '\\0'], ['\\\\', '\\\\'], ['e', '\\x1B'], ['a', '\\x07']]);\n\nfunction unescape(c) {\n\tif (c[0] === 'u' && c.length === 5 || c[0] === 'x' && c.length === 3) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tvar results = [];\n\tvar chunks = args.trim().split(/\\s*,\\s*/g);\n\tvar matches = void 0;\n\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = chunks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar chunk = _step.value;\n\n\t\t\tif (!isNaN(chunk)) {\n\t\t\t\tresults.push(Number(chunk));\n\t\t\t} else if (matches = chunk.match(STRING_REGEX)) {\n\t\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, function (m, escape, chr) {\n\t\t\t\t\treturn escape ? unescape(escape) : chr;\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tthrow new Error('Invalid Chalk template style argument: ' + chunk + ' (in style \\'' + name + '\\')');\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tvar results = [];\n\tvar matches = void 0;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tvar name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tvar args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tvar enabled = {};\n\n\tvar _iteratorNormalCompletion2 = true;\n\tvar _didIteratorError2 = false;\n\tvar _iteratorError2 = undefined;\n\n\ttry {\n\t\tfor (var _iterator2 = styles[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\tvar layer = _step2.value;\n\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\tvar _didIteratorError4 = false;\n\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator4 = layer.styles[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\tvar style = _step4.value;\n\n\t\t\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t_iteratorError4 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError2 = true;\n\t\t_iteratorError2 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t_iterator2.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError2) {\n\t\t\t\tthrow _iteratorError2;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar current = chalk;\n\tvar _iteratorNormalCompletion3 = true;\n\tvar _didIteratorError3 = false;\n\tvar _iteratorError3 = undefined;\n\n\ttry {\n\t\tfor (var _iterator3 = Object.keys(enabled)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\tvar styleName = _step3.value;\n\n\t\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\t\tif (!(styleName in current)) {\n\t\t\t\t\tthrow new Error('Unknown Chalk style: ' + styleName);\n\t\t\t\t}\n\n\t\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t\t} else {\n\t\t\t\t\tcurrent = current[styleName];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError3 = true;\n\t\t_iteratorError3 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t_iterator3.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError3) {\n\t\t\t\tthrow _iteratorError3;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = function (chalk, tmp) {\n\tvar styles = [];\n\tvar chunks = [];\n\tvar chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, function (m, escapeChar, inverse, style, close, chr) {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tvar str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({ inverse: inverse, styles: parseStyle(style) });\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tvar errMsg = 'Chalk template literal is missing ' + styles.length + ' closing bracket' + (styles.length === 1 ? '' : 's') + ' (`}`)';\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n\n//# sourceURL=webpack:///./node_modules/chalk/templates.js?");

/***/ }),

/***/ "./node_modules/color-convert/conversions.js":
/*!***************************************************!*\
  !*** ./node_modules/color-convert/conversions.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* MIT license */\nvar cssKeywords = __webpack_require__(/*! color-name */ \"./node_modules/color-name/index.js\");\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: { channels: 3, labels: 'rgb' },\n\thsl: { channels: 3, labels: 'hsl' },\n\thsv: { channels: 3, labels: 'hsv' },\n\thwb: { channels: 3, labels: 'hwb' },\n\tcmyk: { channels: 4, labels: 'cmyk' },\n\txyz: { channels: 3, labels: 'xyz' },\n\tlab: { channels: 3, labels: 'lab' },\n\tlch: { channels: 3, labels: 'lch' },\n\thex: { channels: 1, labels: ['hex'] },\n\tkeyword: { channels: 1, labels: ['keyword'] },\n\tansi16: { channels: 1, labels: ['ansi16'] },\n\tansi256: { channels: 1, labels: ['ansi256'] },\n\thcg: { channels: 3, labels: ['h', 'c', 'g'] },\n\tapple: { channels: 3, labels: ['r16', 'g16', 'b16'] },\n\tgray: { channels: 1, labels: ['gray'] }\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', { value: channels });\n\t\tObject.defineProperty(convert[model], 'labels', { value: labels });\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function diffc(c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = 1 / 3 + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = 2 / 3 + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [h * 360, s * 100, v * 100];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn Math.pow(x[0] - y[0], 2) + Math.pow(x[1] - y[1], 2) + Math.pow(x[2] - y[2], 2);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n\tg = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n\tb = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n\n\tvar x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n\tvar y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n\tvar z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n\n\tl = 116 * y - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= l <= 1 ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - s * f);\n\tvar t = 255 * v * (1 - s * (1 - f));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= lmin <= 1 ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0:\n\t\t\tr = v;g = n;b = wh;break;\n\t\tcase 1:\n\t\t\tr = n;g = v;b = wh;break;\n\t\tcase 2:\n\t\t\tr = wh;g = v;b = n;break;\n\t\tcase 3:\n\t\t\tr = wh;g = n;b = v;break;\n\t\tcase 4:\n\t\t\tr = n;g = wh;b = v;break;\n\t\tcase 5:\n\t\t\tr = v;g = wh;b = n;break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = x * 3.2406 + y * -1.5372 + z * -0.4986;\n\tg = x * -0.9689 + y * 1.8758 + z * 0.0415;\n\tb = x * 0.0557 + y * -0.2040 + z * 1.0570;\n\n\t// assume sRGB\n\tr = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r * 12.92;\n\n\tg = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g * 12.92;\n\n\tb = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n\n\tl = 116 * y - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round((r - 8) / 247 * 24) + 232;\n\t}\n\n\tvar ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = (color & 1) * mult * 255;\n\tvar g = (color >> 1 & 1) * mult * 255;\n\tvar b = (color >> 2 & 1) * mult * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = rem % 6 / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16) + ((Math.round(args[1]) & 0xFF) << 8) + (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = integer >> 16 & 0xFF;\n\tvar g = integer >> 8 & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = max - min;\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else if (max === r) {\n\t\thue = (g - b) / chroma % 6;\n\t} else if (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = h % 1 * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1;pure[1] = v;pure[2] = 0;break;\n\t\tcase 1:\n\t\t\tpure[0] = w;pure[1] = 1;pure[2] = 0;break;\n\t\tcase 2:\n\t\t\tpure[0] = 0;pure[1] = 1;pure[2] = v;break;\n\t\tcase 3:\n\t\t\tpure[0] = 0;pure[1] = w;pure[2] = 1;break;\n\t\tcase 4:\n\t\t\tpure[0] = v;pure[1] = 0;pure[2] = 1;break;\n\t\tdefault:\n\t\t\tpure[0] = 1;pure[1] = 0;pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [(c * pure[0] + mg) * 255, (c * pure[1] + mg) * 255, (c * pure[2] + mg) * 255];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else if (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [apple[0] / 65535 * 255, apple[1] / 65535 * 255, apple[2] / 65535 * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [rgb[0] / 255 * 65535, rgb[1] / 255 * 65535, rgb[2] / 255 * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n\n//# sourceURL=webpack:///./node_modules/color-convert/conversions.js?");

/***/ }),

/***/ "./node_modules/color-convert/index.js":
/*!*********************************************!*\
  !*** ./node_modules/color-convert/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar conversions = __webpack_require__(/*! ./conversions */ \"./node_modules/color-convert/conversions.js\");\nvar route = __webpack_require__(/*! ./route */ \"./node_modules/color-convert/route.js\");\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function wrappedFn(args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function wrappedFn(args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', { value: conversions[fromModel].channels });\n\tObject.defineProperty(convert[fromModel], 'labels', { value: conversions[fromModel].labels });\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n\n//# sourceURL=webpack:///./node_modules/color-convert/index.js?");

/***/ }),

/***/ "./node_modules/color-convert/route.js":
/*!*********************************************!*\
  !*** ./node_modules/color-convert/route.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar conversions = __webpack_require__(/*! ./conversions */ \"./node_modules/color-convert/conversions.js\");\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n//# sourceURL=webpack:///./node_modules/color-convert/route.js?");

/***/ }),

/***/ "./node_modules/color-name/index.js":
/*!******************************************!*\
  !*** ./node_modules/color-name/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = {\n\t\"aliceblue\": [240, 248, 255],\n\t\"antiquewhite\": [250, 235, 215],\n\t\"aqua\": [0, 255, 255],\n\t\"aquamarine\": [127, 255, 212],\n\t\"azure\": [240, 255, 255],\n\t\"beige\": [245, 245, 220],\n\t\"bisque\": [255, 228, 196],\n\t\"black\": [0, 0, 0],\n\t\"blanchedalmond\": [255, 235, 205],\n\t\"blue\": [0, 0, 255],\n\t\"blueviolet\": [138, 43, 226],\n\t\"brown\": [165, 42, 42],\n\t\"burlywood\": [222, 184, 135],\n\t\"cadetblue\": [95, 158, 160],\n\t\"chartreuse\": [127, 255, 0],\n\t\"chocolate\": [210, 105, 30],\n\t\"coral\": [255, 127, 80],\n\t\"cornflowerblue\": [100, 149, 237],\n\t\"cornsilk\": [255, 248, 220],\n\t\"crimson\": [220, 20, 60],\n\t\"cyan\": [0, 255, 255],\n\t\"darkblue\": [0, 0, 139],\n\t\"darkcyan\": [0, 139, 139],\n\t\"darkgoldenrod\": [184, 134, 11],\n\t\"darkgray\": [169, 169, 169],\n\t\"darkgreen\": [0, 100, 0],\n\t\"darkgrey\": [169, 169, 169],\n\t\"darkkhaki\": [189, 183, 107],\n\t\"darkmagenta\": [139, 0, 139],\n\t\"darkolivegreen\": [85, 107, 47],\n\t\"darkorange\": [255, 140, 0],\n\t\"darkorchid\": [153, 50, 204],\n\t\"darkred\": [139, 0, 0],\n\t\"darksalmon\": [233, 150, 122],\n\t\"darkseagreen\": [143, 188, 143],\n\t\"darkslateblue\": [72, 61, 139],\n\t\"darkslategray\": [47, 79, 79],\n\t\"darkslategrey\": [47, 79, 79],\n\t\"darkturquoise\": [0, 206, 209],\n\t\"darkviolet\": [148, 0, 211],\n\t\"deeppink\": [255, 20, 147],\n\t\"deepskyblue\": [0, 191, 255],\n\t\"dimgray\": [105, 105, 105],\n\t\"dimgrey\": [105, 105, 105],\n\t\"dodgerblue\": [30, 144, 255],\n\t\"firebrick\": [178, 34, 34],\n\t\"floralwhite\": [255, 250, 240],\n\t\"forestgreen\": [34, 139, 34],\n\t\"fuchsia\": [255, 0, 255],\n\t\"gainsboro\": [220, 220, 220],\n\t\"ghostwhite\": [248, 248, 255],\n\t\"gold\": [255, 215, 0],\n\t\"goldenrod\": [218, 165, 32],\n\t\"gray\": [128, 128, 128],\n\t\"green\": [0, 128, 0],\n\t\"greenyellow\": [173, 255, 47],\n\t\"grey\": [128, 128, 128],\n\t\"honeydew\": [240, 255, 240],\n\t\"hotpink\": [255, 105, 180],\n\t\"indianred\": [205, 92, 92],\n\t\"indigo\": [75, 0, 130],\n\t\"ivory\": [255, 255, 240],\n\t\"khaki\": [240, 230, 140],\n\t\"lavender\": [230, 230, 250],\n\t\"lavenderblush\": [255, 240, 245],\n\t\"lawngreen\": [124, 252, 0],\n\t\"lemonchiffon\": [255, 250, 205],\n\t\"lightblue\": [173, 216, 230],\n\t\"lightcoral\": [240, 128, 128],\n\t\"lightcyan\": [224, 255, 255],\n\t\"lightgoldenrodyellow\": [250, 250, 210],\n\t\"lightgray\": [211, 211, 211],\n\t\"lightgreen\": [144, 238, 144],\n\t\"lightgrey\": [211, 211, 211],\n\t\"lightpink\": [255, 182, 193],\n\t\"lightsalmon\": [255, 160, 122],\n\t\"lightseagreen\": [32, 178, 170],\n\t\"lightskyblue\": [135, 206, 250],\n\t\"lightslategray\": [119, 136, 153],\n\t\"lightslategrey\": [119, 136, 153],\n\t\"lightsteelblue\": [176, 196, 222],\n\t\"lightyellow\": [255, 255, 224],\n\t\"lime\": [0, 255, 0],\n\t\"limegreen\": [50, 205, 50],\n\t\"linen\": [250, 240, 230],\n\t\"magenta\": [255, 0, 255],\n\t\"maroon\": [128, 0, 0],\n\t\"mediumaquamarine\": [102, 205, 170],\n\t\"mediumblue\": [0, 0, 205],\n\t\"mediumorchid\": [186, 85, 211],\n\t\"mediumpurple\": [147, 112, 219],\n\t\"mediumseagreen\": [60, 179, 113],\n\t\"mediumslateblue\": [123, 104, 238],\n\t\"mediumspringgreen\": [0, 250, 154],\n\t\"mediumturquoise\": [72, 209, 204],\n\t\"mediumvioletred\": [199, 21, 133],\n\t\"midnightblue\": [25, 25, 112],\n\t\"mintcream\": [245, 255, 250],\n\t\"mistyrose\": [255, 228, 225],\n\t\"moccasin\": [255, 228, 181],\n\t\"navajowhite\": [255, 222, 173],\n\t\"navy\": [0, 0, 128],\n\t\"oldlace\": [253, 245, 230],\n\t\"olive\": [128, 128, 0],\n\t\"olivedrab\": [107, 142, 35],\n\t\"orange\": [255, 165, 0],\n\t\"orangered\": [255, 69, 0],\n\t\"orchid\": [218, 112, 214],\n\t\"palegoldenrod\": [238, 232, 170],\n\t\"palegreen\": [152, 251, 152],\n\t\"paleturquoise\": [175, 238, 238],\n\t\"palevioletred\": [219, 112, 147],\n\t\"papayawhip\": [255, 239, 213],\n\t\"peachpuff\": [255, 218, 185],\n\t\"peru\": [205, 133, 63],\n\t\"pink\": [255, 192, 203],\n\t\"plum\": [221, 160, 221],\n\t\"powderblue\": [176, 224, 230],\n\t\"purple\": [128, 0, 128],\n\t\"rebeccapurple\": [102, 51, 153],\n\t\"red\": [255, 0, 0],\n\t\"rosybrown\": [188, 143, 143],\n\t\"royalblue\": [65, 105, 225],\n\t\"saddlebrown\": [139, 69, 19],\n\t\"salmon\": [250, 128, 114],\n\t\"sandybrown\": [244, 164, 96],\n\t\"seagreen\": [46, 139, 87],\n\t\"seashell\": [255, 245, 238],\n\t\"sienna\": [160, 82, 45],\n\t\"silver\": [192, 192, 192],\n\t\"skyblue\": [135, 206, 235],\n\t\"slateblue\": [106, 90, 205],\n\t\"slategray\": [112, 128, 144],\n\t\"slategrey\": [112, 128, 144],\n\t\"snow\": [255, 250, 250],\n\t\"springgreen\": [0, 255, 127],\n\t\"steelblue\": [70, 130, 180],\n\t\"tan\": [210, 180, 140],\n\t\"teal\": [0, 128, 128],\n\t\"thistle\": [216, 191, 216],\n\t\"tomato\": [255, 99, 71],\n\t\"turquoise\": [64, 224, 208],\n\t\"violet\": [238, 130, 238],\n\t\"wheat\": [245, 222, 179],\n\t\"white\": [255, 255, 255],\n\t\"whitesmoke\": [245, 245, 245],\n\t\"yellow\": [255, 255, 0],\n\t\"yellowgreen\": [154, 205, 50]\n};\n\n//# sourceURL=webpack:///./node_modules/color-name/index.js?");

/***/ }),

/***/ "./node_modules/escape-string-regexp/index.js":
/*!****************************************************!*\
  !*** ./node_modules/escape-string-regexp/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n\n//# sourceURL=webpack:///./node_modules/escape-string-regexp/index.js?");

/***/ }),

/***/ "./node_modules/figlet/lib/figlet.js":
/*!*******************************************!*\
  !*** ./node_modules/figlet/lib/figlet.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n    FIGlet.js (a FIGDriver for FIGlet fonts)\n    By Patrick Gillespie (patorjk@gmail.com)\n    Originally Written For: http://patorjk.com/software/taag/\n    License: MIT (with this header staying intact)\n\n    This JavaScript code aims to fully implement the FIGlet spec.\n    Full FIGlet spec: http://patorjk.com/software/taag/docs/figfont.txt\n\n    FIGlet fonts are actually kind of complex, which is why you will see\n    a lot of code about parsing and interpreting rules. The actual generation\n    code is pretty simple and is done near the bottom of the code.\n*/\n\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar figlet = figlet || function () {\n\n    // ---------------------------------------------------------------------\n    // Private static variables\n\n    var FULL_WIDTH = 0,\n        FITTING = 1,\n        SMUSHING = 2,\n        CONTROLLED_SMUSHING = 3;\n\n    // ---------------------------------------------------------------------\n    // Variable that will hold information about the fonts\n\n    var figFonts = {}; // What stores all of the FIGlet font data\n    var figDefaults = {\n        font: 'Standard',\n        fontPath: './fonts'\n    };\n\n    // ---------------------------------------------------------------------\n    // Private static methods\n\n    /*\n        This method takes in the oldLayout and newLayout data from the FIGfont header file and returns\n        the layout information.\n    */\n    function getSmushingRules(oldLayout, newLayout) {\n        var rules = {};\n        var val, index, len, code;\n        var codes = [[16384, \"vLayout\", SMUSHING], [8192, \"vLayout\", FITTING], [4096, \"vRule5\", true], [2048, \"vRule4\", true], [1024, \"vRule3\", true], [512, \"vRule2\", true], [256, \"vRule1\", true], [128, \"hLayout\", SMUSHING], [64, \"hLayout\", FITTING], [32, \"hRule6\", true], [16, \"hRule5\", true], [8, \"hRule4\", true], [4, \"hRule3\", true], [2, \"hRule2\", true], [1, \"hRule1\", true]];\n\n        val = newLayout !== null ? newLayout : oldLayout;\n        index = 0;\n        len = codes.length;\n        while (index < len) {\n            code = codes[index];\n            if (val >= code[0]) {\n                val = val - code[0];\n                rules[code[1]] = typeof rules[code[1]] === \"undefined\" ? code[2] : rules[code[1]];\n            } else if (code[1] !== \"vLayout\" && code[1] !== \"hLayout\") {\n                rules[code[1]] = false;\n            }\n            index++;\n        }\n\n        if (typeof rules[\"hLayout\"] === \"undefined\") {\n            if (oldLayout === 0) {\n                rules[\"hLayout\"] = FITTING;\n            } else if (oldLayout === -1) {\n                rules[\"hLayout\"] = FULL_WIDTH;\n            } else {\n                if (rules[\"hRule1\"] || rules[\"hRule2\"] || rules[\"hRule3\"] || rules[\"hRule4\"] || rules[\"hRule5\"] || rules[\"hRule6\"]) {\n                    rules[\"hLayout\"] = CONTROLLED_SMUSHING;\n                } else {\n                    rules[\"hLayout\"] = SMUSHING;\n                }\n            }\n        } else if (rules[\"hLayout\"] === SMUSHING) {\n            if (rules[\"hRule1\"] || rules[\"hRule2\"] || rules[\"hRule3\"] || rules[\"hRule4\"] || rules[\"hRule5\"] || rules[\"hRule6\"]) {\n                rules[\"hLayout\"] = CONTROLLED_SMUSHING;\n            }\n        }\n\n        if (typeof rules[\"vLayout\"] === \"undefined\") {\n            if (rules[\"vRule1\"] || rules[\"vRule2\"] || rules[\"vRule3\"] || rules[\"vRule4\"] || rules[\"vRule5\"]) {\n                rules[\"vLayout\"] = CONTROLLED_SMUSHING;\n            } else {\n                rules[\"vLayout\"] = FULL_WIDTH;\n            }\n        } else if (rules[\"vLayout\"] === SMUSHING) {\n            if (rules[\"vRule1\"] || rules[\"vRule2\"] || rules[\"vRule3\"] || rules[\"vRule4\"] || rules[\"vRule5\"]) {\n                rules[\"vLayout\"] = CONTROLLED_SMUSHING;\n            }\n        }\n\n        return rules;\n    }\n\n    /* The [vh]Rule[1-6]_Smush functions return the smushed character OR false if the two characters can't be smushed */\n\n    /*\n        Rule 1: EQUAL CHARACTER SMUSHING (code value 1)\n             Two sub-characters are smushed into a single sub-character\n            if they are the same.  This rule does not smush\n            hardblanks.  (See rule 6 on hardblanks below)\n    */\n    function hRule1_Smush(ch1, ch2, hardBlank) {\n        if (ch1 === ch2 && ch1 !== hardBlank) {\n            return ch1;\n        }\n        return false;\n    }\n\n    /*\n        Rule 2: UNDERSCORE SMUSHING (code value 2)\n             An underscore (\"_\") will be replaced by any of: \"|\", \"/\",\n            \"\\\", \"[\", \"]\", \"{\", \"}\", \"(\", \")\", \"<\" or \">\".\n    */\n    function hRule2_Smush(ch1, ch2) {\n        var rule2Str = \"|/\\\\[]{}()<>\";\n        if (ch1 === \"_\") {\n            if (rule2Str.indexOf(ch2) !== -1) {\n                return ch2;\n            }\n        } else if (ch2 === \"_\") {\n            if (rule2Str.indexOf(ch1) !== -1) {\n                return ch1;\n            }\n        }\n        return false;\n    }\n\n    /*\n        Rule 3: HIERARCHY SMUSHING (code value 4)\n             A hierarchy of six classes is used: \"|\", \"/\\\", \"[]\", \"{}\",\n            \"()\", and \"<>\".  When two smushing sub-characters are\n            from different classes, the one from the latter class\n            will be used.\n    */\n    function hRule3_Smush(ch1, ch2) {\n        var rule3Classes = \"| /\\\\ [] {} () <>\";\n        var r3_pos1 = rule3Classes.indexOf(ch1);\n        var r3_pos2 = rule3Classes.indexOf(ch2);\n        if (r3_pos1 !== -1 && r3_pos2 !== -1) {\n            if (r3_pos1 !== r3_pos2 && Math.abs(r3_pos1 - r3_pos2) !== 1) {\n                return rule3Classes.substr(Math.max(r3_pos1, r3_pos2), 1);\n            }\n        }\n        return false;\n    }\n\n    /*\n        Rule 4: OPPOSITE PAIR SMUSHING (code value 8)\n             Smushes opposing brackets (\"[]\" or \"][\"), braces (\"{}\" or\n            \"}{\") and parentheses (\"()\" or \")(\") together, replacing\n            any such pair with a vertical bar (\"|\").\n    */\n    function hRule4_Smush(ch1, ch2) {\n        var rule4Str = \"[] {} ()\";\n        var r4_pos1 = rule4Str.indexOf(ch1);\n        var r4_pos2 = rule4Str.indexOf(ch2);\n        if (r4_pos1 !== -1 && r4_pos2 !== -1) {\n            if (Math.abs(r4_pos1 - r4_pos2) <= 1) {\n                return \"|\";\n            }\n        }\n        return false;\n    }\n\n    /*\n        Rule 5: BIG X SMUSHING (code value 16)\n             Smushes \"/\\\" into \"|\", \"\\/\" into \"Y\", and \"><\" into \"X\".\n            Note that \"<>\" is not smushed in any way by this rule.\n            The name \"BIG X\" is historical; originally all three pairs\n            were smushed into \"X\".\n    */\n    function hRule5_Smush(ch1, ch2) {\n        var rule5Str = \"/\\\\ \\\\/ ><\";\n        var rule5Hash = { \"0\": \"|\", \"3\": \"Y\", \"6\": \"X\" };\n        var r5_pos1 = rule5Str.indexOf(ch1);\n        var r5_pos2 = rule5Str.indexOf(ch2);\n        if (r5_pos1 !== -1 && r5_pos2 !== -1) {\n            if (r5_pos2 - r5_pos1 === 1) {\n                return rule5Hash[r5_pos1];\n            }\n        }\n        return false;\n    }\n\n    /*\n        Rule 6: HARDBLANK SMUSHING (code value 32)\n             Smushes two hardblanks together, replacing them with a\n            single hardblank.  (See \"Hardblanks\" below.)\n    */\n    function hRule6_Smush(ch1, ch2, hardBlank) {\n        if (ch1 === hardBlank && ch2 === hardBlank) {\n            return hardBlank;\n        }\n        return false;\n    }\n\n    /*\n        Rule 1: EQUAL CHARACTER SMUSHING (code value 256)\n             Same as horizontal smushing rule 1.\n    */\n    function vRule1_Smush(ch1, ch2) {\n        if (ch1 === ch2) {\n            return ch1;\n        }\n        return false;\n    }\n\n    /*\n        Rule 2: UNDERSCORE SMUSHING (code value 512)\n             Same as horizontal smushing rule 2.\n    */\n    function vRule2_Smush(ch1, ch2) {\n        var rule2Str = \"|/\\\\[]{}()<>\";\n        if (ch1 === \"_\") {\n            if (rule2Str.indexOf(ch2) !== -1) {\n                return ch2;\n            }\n        } else if (ch2 === \"_\") {\n            if (rule2Str.indexOf(ch1) !== -1) {\n                return ch1;\n            }\n        }\n        return false;\n    }\n\n    /*\n        Rule 3: HIERARCHY SMUSHING (code value 1024)\n             Same as horizontal smushing rule 3.\n    */\n    function vRule3_Smush(ch1, ch2) {\n        var rule3Classes = \"| /\\\\ [] {} () <>\";\n        var r3_pos1 = rule3Classes.indexOf(ch1);\n        var r3_pos2 = rule3Classes.indexOf(ch2);\n        if (r3_pos1 !== -1 && r3_pos2 !== -1) {\n            if (r3_pos1 !== r3_pos2 && Math.abs(r3_pos1 - r3_pos2) !== 1) {\n                return rule3Classes.substr(Math.max(r3_pos1, r3_pos2), 1);\n            }\n        }\n        return false;\n    }\n\n    /*\n        Rule 4: HORIZONTAL LINE SMUSHING (code value 2048)\n             Smushes stacked pairs of \"-\" and \"_\", replacing them with\n            a single \"=\" sub-character.  It does not matter which is\n            found above the other.  Note that vertical smushing rule 1\n            will smush IDENTICAL pairs of horizontal lines, while this\n            rule smushes horizontal lines consisting of DIFFERENT\n            sub-characters.\n    */\n    function vRule4_Smush(ch1, ch2) {\n        if (ch1 === \"-\" && ch2 === \"_\" || ch1 === \"_\" && ch2 === \"-\") {\n            return \"=\";\n        }\n        return false;\n    }\n\n    /*\n        Rule 5: VERTICAL LINE SUPERSMUSHING (code value 4096)\n             This one rule is different from all others, in that it\n            \"supersmushes\" vertical lines consisting of several\n            vertical bars (\"|\").  This creates the illusion that\n            FIGcharacters have slid vertically against each other.\n            Supersmushing continues until any sub-characters other\n            than \"|\" would have to be smushed.  Supersmushing can\n            produce impressive results, but it is seldom possible,\n            since other sub-characters would usually have to be\n            considered for smushing as soon as any such stacked\n            vertical lines are encountered.\n    */\n    function vRule5_Smush(ch1, ch2) {\n        if (ch1 === \"|\" && ch2 === \"|\") {\n            return \"|\";\n        }\n        return false;\n    }\n\n    /*\n        Universal smushing simply overrides the sub-character from the\n        earlier FIGcharacter with the sub-character from the later\n        FIGcharacter.  This produces an \"overlapping\" effect with some\n        FIGfonts, wherin the latter FIGcharacter may appear to be \"in\n        front\".\n    */\n    function uni_Smush(ch1, ch2, hardBlank) {\n        if (ch2 === \" \" || ch2 === \"\") {\n            return ch1;\n        } else if (ch2 === hardBlank && ch1 !== \" \") {\n            return ch1;\n        } else {\n            return ch2;\n        }\n    }\n\n    // --------------------------------------------------------------------------\n    // main vertical smush routines (excluding rules)\n\n    /*\n        txt1 - A line of text\n        txt2 - A line of text\n        opts - FIGlet options array\n         About: Takes in two lines of text and returns one of the following:\n        \"valid\" - These lines can be smushed together given the current smushing rules\n        \"end\" - The lines can be smushed, but we're at a stopping point\n        \"invalid\" - The two lines cannot be smushed together\n    */\n    function canVerticalSmush(txt1, txt2, opts) {\n        if (opts.fittingRules.vLayout === FULL_WIDTH) {\n            return \"invalid\";\n        }\n        var ii,\n            len = Math.min(txt1.length, txt2.length);\n        var ch1,\n            ch2,\n            endSmush = false,\n            validSmush;\n        if (len === 0) {\n            return \"invalid\";\n        }\n\n        for (ii = 0; ii < len; ii++) {\n            ch1 = txt1.substr(ii, 1);\n            ch2 = txt2.substr(ii, 1);\n            if (ch1 !== \" \" && ch2 !== \" \") {\n                if (opts.fittingRules.vLayout === FITTING) {\n                    return \"invalid\";\n                } else if (opts.fittingRules.vLayout === SMUSHING) {\n                    return \"end\";\n                } else {\n                    if (vRule5_Smush(ch1, ch2)) {\n                        endSmush = endSmush || false;continue;\n                    } // rule 5 allow for \"super\" smushing, but only if we're not already ending this smush\n                    validSmush = false;\n                    validSmush = opts.fittingRules.vRule1 ? vRule1_Smush(ch1, ch2) : validSmush;\n                    validSmush = !validSmush && opts.fittingRules.vRule2 ? vRule2_Smush(ch1, ch2) : validSmush;\n                    validSmush = !validSmush && opts.fittingRules.vRule3 ? vRule3_Smush(ch1, ch2) : validSmush;\n                    validSmush = !validSmush && opts.fittingRules.vRule4 ? vRule4_Smush(ch1, ch2) : validSmush;\n                    endSmush = true;\n                    if (!validSmush) {\n                        return \"invalid\";\n                    }\n                }\n            }\n        }\n        if (endSmush) {\n            return \"end\";\n        } else {\n            return \"valid\";\n        }\n    }\n\n    function getVerticalSmushDist(lines1, lines2, opts) {\n        var maxDist = lines1.length;\n        var len1 = lines1.length;\n        var len2 = lines2.length;\n        var subLines1, subLines2, slen;\n        var curDist = 1;\n        var ii, ret, result;\n        while (curDist <= maxDist) {\n\n            subLines1 = lines1.slice(Math.max(0, len1 - curDist), len1);\n            subLines2 = lines2.slice(0, Math.min(maxDist, curDist));\n\n            slen = subLines2.length; //TODO:check this\n            result = \"\";\n            for (ii = 0; ii < slen; ii++) {\n                ret = canVerticalSmush(subLines1[ii], subLines2[ii], opts);\n                if (ret === \"end\") {\n                    result = ret;\n                } else if (ret === \"invalid\") {\n                    result = ret;\n                    break;\n                } else {\n                    if (result === \"\") {\n                        result = \"valid\";\n                    }\n                }\n            }\n\n            if (result === \"invalid\") {\n                curDist--;break;\n            }\n            if (result === \"end\") {\n                break;\n            }\n            if (result === \"valid\") {\n                curDist++;\n            }\n        }\n\n        return Math.min(maxDist, curDist);\n    }\n\n    function verticallySmushLines(line1, line2, opts) {\n        var ii,\n            len = Math.min(line1.length, line2.length);\n        var ch1,\n            ch2,\n            result = \"\",\n            validSmush;\n\n        for (ii = 0; ii < len; ii++) {\n            ch1 = line1.substr(ii, 1);\n            ch2 = line2.substr(ii, 1);\n            if (ch1 !== \" \" && ch2 !== \" \") {\n                if (opts.fittingRules.vLayout === FITTING) {\n                    result += uni_Smush(ch1, ch2);\n                } else if (opts.fittingRules.vLayout === SMUSHING) {\n                    result += uni_Smush(ch1, ch2);\n                } else {\n                    validSmush = opts.fittingRules.vRule5 ? vRule5_Smush(ch1, ch2) : validSmush;\n                    validSmush = !validSmush && opts.fittingRules.vRule1 ? vRule1_Smush(ch1, ch2) : validSmush;\n                    validSmush = !validSmush && opts.fittingRules.vRule2 ? vRule2_Smush(ch1, ch2) : validSmush;\n                    validSmush = !validSmush && opts.fittingRules.vRule3 ? vRule3_Smush(ch1, ch2) : validSmush;\n                    validSmush = !validSmush && opts.fittingRules.vRule4 ? vRule4_Smush(ch1, ch2) : validSmush;\n                    result += validSmush;\n                }\n            } else {\n                result += uni_Smush(ch1, ch2);\n            }\n        }\n        return result;\n    }\n\n    function verticalSmush(lines1, lines2, overlap, opts) {\n        var len1 = lines1.length;\n        var len2 = lines2.length;\n        var piece1 = lines1.slice(0, Math.max(0, len1 - overlap));\n        var piece2_1 = lines1.slice(Math.max(0, len1 - overlap), len1);\n        var piece2_2 = lines2.slice(0, Math.min(overlap, len2));\n        var ii,\n            len,\n            line,\n            piece2 = [],\n            piece3,\n            result = [];\n\n        len = piece2_1.length;\n        for (ii = 0; ii < len; ii++) {\n            if (ii >= len2) {\n                line = piece2_1[ii];\n            } else {\n                line = verticallySmushLines(piece2_1[ii], piece2_2[ii], opts);\n            }\n            piece2.push(line);\n        }\n\n        piece3 = lines2.slice(Math.min(overlap, len2), len2);\n\n        return result.concat(piece1, piece2, piece3);\n    }\n\n    function padLines(lines, numSpaces) {\n        var ii,\n            len = lines.length,\n            padding = \"\";\n        for (ii = 0; ii < numSpaces; ii++) {\n            padding += \" \";\n        }\n        for (ii = 0; ii < len; ii++) {\n            lines[ii] += padding;\n        }\n    }\n\n    function smushVerticalFigLines(output, lines, opts) {\n        var len1 = output[0].length;\n        var len2 = lines[0].length;\n        var overlap;\n        if (len1 > len2) {\n            padLines(lines, len1 - len2);\n        } else if (len2 > len1) {\n            padLines(output, len2 - len1);\n        }\n        overlap = getVerticalSmushDist(output, lines, opts);\n        return verticalSmush(output, lines, overlap, opts);\n    }\n\n    // -------------------------------------------------------------------------\n    // Main horizontal smush routines (excluding rules)\n\n    function getHorizontalSmushLength(txt1, txt2, opts) {\n        if (opts.fittingRules.hLayout === FULL_WIDTH) {\n            return 0;\n        }\n        var ii,\n            len1 = txt1.length,\n            len2 = txt2.length;\n        var maxDist = len1;\n        var curDist = 1;\n        var breakAfter = false;\n        var validSmush = false;\n        var seg1, seg2, ch1, ch2;\n        if (len1 === 0) {\n            return 0;\n        }\n\n        distCal: while (curDist <= maxDist) {\n            seg1 = txt1.substr(len1 - curDist, curDist);\n            seg2 = txt2.substr(0, Math.min(curDist, len2));\n            for (ii = 0; ii < Math.min(curDist, len2); ii++) {\n                ch1 = seg1.substr(ii, 1);\n                ch2 = seg2.substr(ii, 1);\n                if (ch1 !== \" \" && ch2 !== \" \") {\n                    if (opts.fittingRules.hLayout === FITTING) {\n                        curDist = curDist - 1;\n                        break distCal;\n                    } else if (opts.fittingRules.hLayout === SMUSHING) {\n                        if (ch1 === opts.hardBlank || ch2 === opts.hardBlank) {\n                            curDist = curDist - 1; // universal smushing does not smush hardblanks\n                        }\n                        break distCal;\n                    } else {\n                        breakAfter = true; // we know we need to break, but we need to check if our smushing rules will allow us to smush the overlapped characters\n                        validSmush = false; // the below checks will let us know if we can smush these characters\n\n                        validSmush = opts.fittingRules.hRule1 ? hRule1_Smush(ch1, ch2, opts.hardBlank) : validSmush;\n                        validSmush = !validSmush && opts.fittingRules.hRule2 ? hRule2_Smush(ch1, ch2, opts.hardBlank) : validSmush;\n                        validSmush = !validSmush && opts.fittingRules.hRule3 ? hRule3_Smush(ch1, ch2, opts.hardBlank) : validSmush;\n                        validSmush = !validSmush && opts.fittingRules.hRule4 ? hRule4_Smush(ch1, ch2, opts.hardBlank) : validSmush;\n                        validSmush = !validSmush && opts.fittingRules.hRule5 ? hRule5_Smush(ch1, ch2, opts.hardBlank) : validSmush;\n                        validSmush = !validSmush && opts.fittingRules.hRule6 ? hRule6_Smush(ch1, ch2, opts.hardBlank) : validSmush;\n\n                        if (!validSmush) {\n                            curDist = curDist - 1;\n                            break distCal;\n                        }\n                    }\n                }\n            }\n            if (breakAfter) {\n                break;\n            }\n            curDist++;\n        }\n        return Math.min(maxDist, curDist);\n    }\n\n    function horizontalSmush(textBlock1, textBlock2, overlap, opts) {\n        var ii,\n            jj,\n            ch,\n            outputFig = [],\n            overlapStart,\n            piece1,\n            piece2,\n            piece3,\n            len1,\n            len2,\n            txt1,\n            txt2;\n\n        for (ii = 0; ii < opts.height; ii++) {\n            txt1 = textBlock1[ii];\n            txt2 = textBlock2[ii];\n            len1 = txt1.length;\n            len2 = txt2.length;\n            overlapStart = len1 - overlap;\n            piece1 = txt1.substr(0, Math.max(0, overlapStart));\n            piece2 = \"\";\n\n            // determine overlap piece\n            var seg1 = txt1.substr(Math.max(0, len1 - overlap), overlap);\n            var seg2 = txt2.substr(0, Math.min(overlap, len2));\n\n            for (jj = 0; jj < overlap; jj++) {\n                var ch1 = jj < len1 ? seg1.substr(jj, 1) : \" \";\n                var ch2 = jj < len2 ? seg2.substr(jj, 1) : \" \";\n\n                if (ch1 !== \" \" && ch2 !== \" \") {\n                    if (opts.fittingRules.hLayout === FITTING) {\n                        piece2 += uni_Smush(ch1, ch2, opts.hardBlank);\n                    } else if (opts.fittingRules.hLayout === SMUSHING) {\n                        piece2 += uni_Smush(ch1, ch2, opts.hardBlank);\n                    } else {\n                        // Controlled Smushing\n                        var nextCh = \"\";\n                        nextCh = !nextCh && opts.fittingRules.hRule1 ? hRule1_Smush(ch1, ch2, opts.hardBlank) : nextCh;\n                        nextCh = !nextCh && opts.fittingRules.hRule2 ? hRule2_Smush(ch1, ch2, opts.hardBlank) : nextCh;\n                        nextCh = !nextCh && opts.fittingRules.hRule3 ? hRule3_Smush(ch1, ch2, opts.hardBlank) : nextCh;\n                        nextCh = !nextCh && opts.fittingRules.hRule4 ? hRule4_Smush(ch1, ch2, opts.hardBlank) : nextCh;\n                        nextCh = !nextCh && opts.fittingRules.hRule5 ? hRule5_Smush(ch1, ch2, opts.hardBlank) : nextCh;\n                        nextCh = !nextCh && opts.fittingRules.hRule6 ? hRule6_Smush(ch1, ch2, opts.hardBlank) : nextCh;\n                        nextCh = nextCh || uni_Smush(ch1, ch2, opts.hardBlank);\n                        piece2 += nextCh;\n                    }\n                } else {\n                    piece2 += uni_Smush(ch1, ch2, opts.hardBlank);\n                }\n            }\n\n            if (overlap >= len2) {\n                piece3 = \"\";\n            } else {\n                piece3 = txt2.substr(overlap, Math.max(0, len2 - overlap));\n            }\n            outputFig[ii] = piece1 + piece2 + piece3;\n        }\n        return outputFig;\n    }\n\n    function generateFigTextLine(txt, figChars, opts) {\n        var charIndex,\n            figChar,\n            overlap = 0,\n            row,\n            outputFigText = [],\n            len = opts.height;\n        for (row = 0; row < len; row++) {\n            outputFigText[row] = \"\";\n        }\n        if (opts.printDirection === 1) {\n            txt = txt.split('').reverse().join('');\n        }\n        len = txt.length;\n        for (charIndex = 0; charIndex < len; charIndex++) {\n            figChar = figChars[txt.substr(charIndex, 1).charCodeAt(0)];\n            if (figChar) {\n                if (opts.fittingRules.hLayout !== FULL_WIDTH) {\n                    overlap = 10000; // a value too high to be the overlap\n                    for (row = 0; row < opts.height; row++) {\n                        overlap = Math.min(overlap, getHorizontalSmushLength(outputFigText[row], figChar[row], opts));\n                    }\n                    overlap = overlap === 10000 ? 0 : overlap;\n                }\n                outputFigText = horizontalSmush(outputFigText, figChar, overlap, opts);\n            }\n        }\n        // remove hardblanks\n        if (opts.showHardBlanks !== true) {\n            len = outputFigText.length;\n            for (row = 0; row < len; row++) {\n                outputFigText[row] = outputFigText[row].replace(new RegExp(\"\\\\\" + opts.hardBlank, \"g\"), \" \");\n            }\n        }\n        return outputFigText;\n    }\n\n    // -------------------------------------------------------------------------\n    // Parsing and Generation methods\n\n    var getHorizontalFittingRules = function getHorizontalFittingRules(layout, options) {\n        var props = [\"hLayout\", \"hRule1\", \"hRule2\", \"hRule3\", \"hRule4\", \"hRule5\", \"hRule6\"],\n            params = {},\n            prop,\n            ii;\n        if (layout === \"default\") {\n            for (ii = 0; ii < props.length; ii++) {\n                params[props[ii]] = options.fittingRules[props[ii]];\n            }\n        } else if (layout === \"full\") {\n            params = { \"hLayout\": FULL_WIDTH, \"hRule1\": false, \"hRule2\": false, \"hRule3\": false, \"hRule4\": false, \"hRule5\": false, \"hRule6\": false };\n        } else if (layout === \"fitted\") {\n            params = { \"hLayout\": FITTING, \"hRule1\": false, \"hRule2\": false, \"hRule3\": false, \"hRule4\": false, \"hRule5\": false, \"hRule6\": false };\n        } else if (layout === \"controlled smushing\") {\n            params = { \"hLayout\": CONTROLLED_SMUSHING, \"hRule1\": true, \"hRule2\": true, \"hRule3\": true, \"hRule4\": true, \"hRule5\": true, \"hRule6\": true };\n        } else if (layout === \"universal smushing\") {\n            params = { \"hLayout\": SMUSHING, \"hRule1\": false, \"hRule2\": false, \"hRule3\": false, \"hRule4\": false, \"hRule5\": false, \"hRule6\": false };\n        } else {\n            return;\n        }\n        return params;\n    };\n\n    var getVerticalFittingRules = function getVerticalFittingRules(layout, options) {\n        var props = [\"vLayout\", \"vRule1\", \"vRule2\", \"vRule3\", \"vRule4\", \"vRule5\"],\n            params = {},\n            prop,\n            ii;\n        if (layout === \"default\") {\n            for (ii = 0; ii < props.length; ii++) {\n                params[props[ii]] = options.fittingRules[props[ii]];\n            }\n        } else if (layout === \"full\") {\n            params = { \"vLayout\": FULL_WIDTH, \"vRule1\": false, \"vRule2\": false, \"vRule3\": false, \"vRule4\": false, \"vRule5\": false };\n        } else if (layout === \"fitted\") {\n            params = { \"vLayout\": FITTING, \"vRule1\": false, \"vRule2\": false, \"vRule3\": false, \"vRule4\": false, \"vRule5\": false };\n        } else if (layout === \"controlled smushing\") {\n            params = { \"vLayout\": CONTROLLED_SMUSHING, \"vRule1\": true, \"vRule2\": true, \"vRule3\": true, \"vRule4\": true, \"vRule5\": true };\n        } else if (layout === \"universal smushing\") {\n            params = { \"vLayout\": SMUSHING, \"vRule1\": false, \"vRule2\": false, \"vRule3\": false, \"vRule4\": false, \"vRule5\": false };\n        } else {\n            return;\n        }\n        return params;\n    };\n\n    /*\n        Generates the ASCII Art\n        - fontName: Font to use\n        - option: Options to override the defaults\n        - txt: The text to make into ASCII Art\n    */\n    var generateText = function generateText(fontName, options, txt) {\n        txt = txt.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n        var lines = txt.split(\"\\n\");\n        var figLines = [];\n        var ii, len, output;\n        len = lines.length;\n        for (ii = 0; ii < len; ii++) {\n            figLines.push(generateFigTextLine(lines[ii], figFonts[fontName], options));\n        }\n        len = figLines.length;\n        output = figLines[0];\n        for (ii = 1; ii < len; ii++) {\n            output = smushVerticalFigLines(output, figLines[ii], options);\n        }\n\n        return output.join(\"\\n\");\n    };\n\n    // -------------------------------------------------------------------------\n    // Public methods\n\n    /*\n        A short-cut for the figlet.text method\n         Parameters:\n        - txt (string): The text to make into ASCII Art\n        - options (object/string - optional): Options that will override the current font's default options.\n          If a string is provided instead of an object, it is assumed to be the font name.\n             * font\n            * horizontalLayout\n            * verticalLayout\n            * showHardBlanks - Wont remove hardblank characters\n         - next (function): A callback function, it will contained the outputted ASCII Art.\n    */\n    var me = function me(txt, options, next) {\n        me.text(txt, options, next);\n    };\n    me.text = function (txt, options, next) {\n        var fontName = '';\n\n        // Validate inputs\n        txt = txt + '';\n\n        if (typeof arguments[1] === 'function') {\n            next = options;\n            options = {};\n            options.font = figDefaults.font; // default font\n        }\n\n        if (typeof options === 'string') {\n            fontName = options;\n            options = {};\n        } else {\n            options = options || {};\n            fontName = options.font || figDefaults.font;\n        }\n\n        /*\n            Load the font. If it loads, it's data will be contained in the figFonts object.\n            The callback will recieve a fontsOpts object, which contains the default\n            options of the font (its fitting rules, etc etc).\n        */\n        me.loadFont(fontName, function (err, fontOpts) {\n            if (err) {\n                return next(err);\n            }\n\n            next(null, generateText(fontName, _reworkFontOpts(fontOpts, options), txt));\n        });\n    };\n\n    /*\n        Synchronous version of figlet.text.\n        Accepts the same parameters.\n     */\n    me.textSync = function (txt, options) {\n        var fontName = '';\n\n        // Validate inputs\n        txt = txt + '';\n\n        if (typeof options === 'string') {\n            fontName = options;\n            options = {};\n        } else {\n            options = options || {};\n            fontName = options.font || figDefaults.font;\n        }\n\n        var fontOpts = _reworkFontOpts(me.loadFontSync(fontName), options);\n        return generateText(fontName, fontOpts, txt);\n    };\n\n    /*\n      takes assigned options and merges them with the default options from the choosen font\n     */\n    function _reworkFontOpts(fontOpts, options) {\n        var myOpts = JSON.parse(JSON.stringify(fontOpts)),\n            // make a copy because we may edit this (see below)\n        params,\n            prop;\n\n        /*\n         If the user is chosing to use a specific type of layout (e.g., 'full', 'fitted', etc etc)\n         Then we need to override the default font options.\n         */\n        if (typeof options.horizontalLayout !== 'undefined') {\n            params = getHorizontalFittingRules(options.horizontalLayout, fontOpts);\n            for (prop in params) {\n                myOpts.fittingRules[prop] = params[prop];\n            }\n        }\n        if (typeof options.verticalLayout !== 'undefined') {\n            params = getVerticalFittingRules(options.verticalLayout, fontOpts);\n            for (prop in params) {\n                myOpts.fittingRules[prop] = params[prop];\n            }\n        }\n        myOpts.printDirection = typeof options.printDirection !== 'undefined' ? options.printDirection : fontOpts.printDirection;\n        myOpts.showHardBlanks = options.showHardBlanks || false;\n\n        return myOpts;\n    }\n\n    /*\n        Returns metadata about a specfic FIGlet font.\n         Returns:\n            next(err, options, headerComment)\n            - err: The error if an error occurred, otherwise null/falsey.\n            - options (object): The options defined for the font.\n            - headerComment (string): The font's header comment.\n    */\n    me.metadata = function (fontName, next) {\n        fontName = fontName + '';\n\n        /*\n            Load the font. If it loads, it's data will be contained in the figFonts object.\n            The callback will recieve a fontsOpts object, which contains the default\n            options of the font (its fitting rules, etc etc).\n        */\n        me.loadFont(fontName, function (err, fontOpts) {\n            if (err) {\n                next(err);\n                return;\n            }\n\n            next(null, fontOpts, figFonts[fontName].comment);\n        });\n    };\n\n    /*\n        Allows you to override defaults. See the definition of the figDefaults object up above\n        to see what properties can be overridden.\n        Returns the options for the font.\n    */\n    me.defaults = function (opts) {\n        if ((typeof opts === 'undefined' ? 'undefined' : _typeof(opts)) === 'object' && opts !== null) {\n            for (var prop in opts) {\n                if (opts.hasOwnProperty(prop)) {\n                    figDefaults[prop] = opts[prop];\n                }\n            }\n        }\n        return JSON.parse(JSON.stringify(figDefaults));\n    };\n\n    /*\n        Parses data from a FIGlet font file and places it into the figFonts object.\n    */\n    me.parseFont = function (fontName, data) {\n        data = data.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n        figFonts[fontName] = {};\n\n        var lines = data.split(\"\\n\");\n        var headerData = lines.splice(0, 1)[0].split(\" \");\n        var figFont = figFonts[fontName];\n        var opts = {};\n\n        opts.hardBlank = headerData[0].substr(5, 1);\n        opts.height = parseInt(headerData[1], 10);\n        opts.baseline = parseInt(headerData[2], 10);\n        opts.maxLength = parseInt(headerData[3], 10);\n        opts.oldLayout = parseInt(headerData[4], 10);\n        opts.numCommentLines = parseInt(headerData[5], 10);\n        opts.printDirection = headerData.length >= 6 ? parseInt(headerData[6], 10) : 0;\n        opts.fullLayout = headerData.length >= 7 ? parseInt(headerData[7], 10) : null;\n        opts.codeTagCount = headerData.length >= 8 ? parseInt(headerData[8], 10) : null;\n        opts.fittingRules = getSmushingRules(opts.oldLayout, opts.fullLayout);\n\n        figFont.options = opts;\n\n        // error check\n        if (opts.hardBlank.length !== 1 || isNaN(opts.height) || isNaN(opts.baseline) || isNaN(opts.maxLength) || isNaN(opts.oldLayout) || isNaN(opts.numCommentLines)) {\n            throw new Error('FIGlet header contains invalid values.');\n        }\n\n        /*\n            All FIGlet fonts must contain chars 32-126, 196, 214, 220, 228, 246, 252, 223\n        */\n\n        var charNums = [],\n            ii;\n        for (ii = 32; ii <= 126; ii++) {\n            charNums.push(ii);\n        }\n        charNums = charNums.concat(196, 214, 220, 228, 246, 252, 223);\n\n        // error check - validate that there are enough lines in the file\n        if (lines.length < opts.numCommentLines + opts.height * charNums.length) {\n            throw new Error('FIGlet file is missing data.');\n        }\n\n        /*\n            Parse out the context of the file and put it into our figFont object\n        */\n\n        var cNum,\n            endCharRegEx,\n            parseError = false;\n\n        figFont.comment = lines.splice(0, opts.numCommentLines).join(\"\\n\");\n        figFont.numChars = 0;\n\n        while (lines.length > 0 && figFont.numChars < charNums.length) {\n            cNum = charNums[figFont.numChars];\n            figFont[cNum] = lines.splice(0, opts.height);\n            // remove end sub-chars\n            for (ii = 0; ii < opts.height; ii++) {\n                if (typeof figFont[cNum][ii] === \"undefined\") {\n                    figFont[cNum][ii] = \"\";\n                } else {\n                    endCharRegEx = new RegExp(\"\\\\\" + figFont[cNum][ii].substr(figFont[cNum][ii].length - 1, 1) + \"+$\");\n                    figFont[cNum][ii] = figFont[cNum][ii].replace(endCharRegEx, \"\");\n                }\n            }\n            figFont.numChars++;\n        }\n\n        /*\n            Now we check to see if any additional characters are present\n        */\n\n        while (lines.length > 0) {\n            cNum = lines.splice(0, 1)[0].split(\" \")[0];\n            if (/^0[xX][0-9a-fA-F]+$/.test(cNum)) {\n                cNum = parseInt(cNum, 16);\n            } else if (/^0[0-7]+$/.test(cNum)) {\n                cNum = parseInt(cNum, 8);\n            } else if (/^[0-9]+$/.test(cNum)) {\n                cNum = parseInt(cNum, 10);\n            } else if (/^-0[xX][0-9a-fA-F]+$/.test(cNum)) {\n                cNum = parseInt(cNum, 16);\n            } else {\n                if (cNum === \"\") {\n                    break;\n                }\n                // something's wrong\n                console.log(\"Invalid data:\" + cNum);\n                parseError = true;\n                break;\n            }\n\n            figFont[cNum] = lines.splice(0, opts.height);\n            // remove end sub-chars\n            for (ii = 0; ii < opts.height; ii++) {\n                if (typeof figFont[cNum][ii] === \"undefined\") {\n                    figFont[cNum][ii] = \"\";\n                } else {\n                    endCharRegEx = new RegExp(\"\\\\\" + figFont[cNum][ii].substr(figFont[cNum][ii].length - 1, 1) + \"+$\");\n                    figFont[cNum][ii] = figFont[cNum][ii].replace(endCharRegEx, \"\");\n                }\n            }\n            figFont.numChars++;\n        }\n\n        // error check\n        if (parseError === true) {\n            throw new Error('Error parsing data.');\n        }\n\n        return opts;\n    };\n\n    /*\n        Loads a font.\n    */\n    me.loadFont = function (fontName, next) {\n        if (figFonts[fontName]) {\n            next(null, figFonts[fontName].options);\n            return;\n        }\n\n        if (typeof fetch !== 'function') {\n            console.error('figlet.js requires the fetch API or a fetch polyfill such as https://cdnjs.com/libraries/fetch');\n            throw new Error('fetch is required for figlet.js to work.');\n        }\n\n        fetch(figDefaults.fontPath + '/' + fontName + '.flf').then(function (response) {\n            if (response.ok) {\n                return response.text();\n            }\n\n            console.log('Unexpected response', response);\n            throw new Error('Network response was not ok.');\n        }).then(function (text) {\n            next(null, me.parseFont(fontName, text));\n        }).catch(next);\n    };\n\n    /*\n        loads a font synchronously, not implemented for the browser\n     */\n    me.loadFontSync = function (name) {\n        if (figFonts[name]) {\n            return figFonts[name].options;\n        }\n        throw new Error('synchronous font loading is not implemented for the browser');\n    };\n\n    /*\n        preloads a list of fonts prior to using textSync\n        - fonts: an array of font names (i.e. [\"Standard\",\"Soft\"])\n        - next: callback function\n     */\n    me.preloadFonts = function (fonts, next) {\n\n        if (typeof jQuery === 'undefined') {\n            /* TODO: create common function for jQuery checks */\n            throw new Error('jQuery is required for ajax method to work.');\n        }\n\n        jQuery.when.apply(this, fonts.map(function (name) {\n            return jQuery.get(figDefaults.fontPath + '/' + name + '.flf');\n        })).then(function () {\n            var args = fonts.length > 1 ? arguments : [arguments];\n            for (var i in fonts) {\n                me.parseFont(fonts[i], args[i][0]);\n            }\n            if (next) next();\n        });\n    };\n\n    return me;\n}();\n\n// for node.js\nif (true) {\n    if (typeof module.exports !== 'undefined') {\n        module.exports = figlet;\n    }\n}\n\n//# sourceURL=webpack:///./node_modules/figlet/lib/figlet.js?");

/***/ }),

/***/ "./node_modules/node-fetch/browser.js":
/*!********************************************!*\
  !*** ./node_modules/node-fetch/browser.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = exports = window.fetch;\n\n// Needed for TypeScript and Webpack.\nexports.default = window.fetch.bind(window);\n\nexports.Headers = window.Headers;\nexports.Request = window.Request;\nexports.Response = window.Response;\n\n//# sourceURL=webpack:///./node_modules/node-fetch/browser.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n})();\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while (len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n    return [];\n};\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n    return '/';\n};\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function () {\n    return 0;\n};\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function (module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function () {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function get() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function get() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ }),

/***/ "./src/requests.js":
/*!*************************!*\
  !*** ./src/requests.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar fetch = __webpack_require__(/*! node-fetch */ \"./node_modules/node-fetch/browser.js\");\n\nvar get = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(url) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(url).then(function (res) {\n              return res.json();\n            }).then(function (data) {\n              return data;\n            });\n\n          case 2:\n            return _context.abrupt('return', _context.sent);\n\n          case 3:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function get(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar requestJoke = function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var URL;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            URL = 'https://api.chucknorris.io/jokes/random';\n            _context2.next = 3;\n            return get(URL);\n\n          case 3:\n            return _context2.abrupt('return', _context2.sent);\n\n          case 4:\n          case 'end':\n            return _context2.stop();\n        }\n      }\n    }, _callee2, undefined);\n  }));\n\n  return function requestJoke() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar requestCategories = function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    var URL;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            URL = 'https://api.chucknorris.io/jokes/categories';\n            _context3.next = 3;\n            return get(URL);\n\n          case 3:\n            return _context3.abrupt('return', _context3.sent);\n\n          case 4:\n          case 'end':\n            return _context3.stop();\n        }\n      }\n    }, _callee3, undefined);\n  }));\n\n  return function requestCategories() {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar requestSpecificCategorie = function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(categorie) {\n    var URL;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            URL = 'https://api.chucknorris.io/jokes/random?category=' + categorie;\n            _context4.next = 3;\n            return get(URL);\n\n          case 3:\n            return _context4.abrupt('return', _context4.sent);\n\n          case 4:\n          case 'end':\n            return _context4.stop();\n        }\n      }\n    }, _callee4, undefined);\n  }));\n\n  return function requestSpecificCategorie(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nmodule.exports = {\n  requestJoke: requestJoke,\n  requestCategories: requestCategories,\n  requestSpecificCategorie: requestSpecificCategorie\n};\n\n//# sourceURL=webpack:///./src/requests.js?");

/***/ }),

/***/ "./src/utils/filter.js":
/*!*****************************!*\
  !*** ./src/utils/filter.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar filter = function filter(arr) {\n  return function (log) {\n    return arr.filter(log);\n  };\n};\n\nmodule.exports = { filter: filter };\n\n//# sourceURL=webpack:///./src/utils/filter.js?");

/***/ })

/******/ });